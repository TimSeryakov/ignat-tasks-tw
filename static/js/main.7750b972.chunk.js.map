{"version":3,"sources":["components/Chat/components/MessageBubble/MessageBubble.module.css","assets/img/fuji.png","assets/img/koifish.png","assets/img/luckycat.png","assets/img/lionstatue.png","components/pages/Error404.tsx","components/common/CustomButton/CustomButton.tsx","components/ToDoBoard/components/ToDoList/ToDoList.tsx","components/ToDoBoard/ToDoBoard.tsx","components/Chat/components/MessageBubble/MessageBubble.tsx","components/Chat/Chat.tsx","components/common/CustomInput/CustomInput.tsx","components/Hello/Hello.tsx","components/CustomElementsDemo/CustomElementsDemo.tsx","components/common/CustomCheckbox/CustomCheckbox.tsx","components/pages/HW4.tsx","components/localStorage/localStorage.ts","components/common/EditableSpan/EditableSpan.tsx","components/pages/HW6.tsx","components/pages/PreJunior.tsx","components/pages/Junior.tsx","components/pages/JuniorPlus.tsx","components/Routes.tsx","components/MenuAside/MenuAside.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Sizes","CustomButton","color","size","className","restProps","buttonStyle","ToDoList","props","renderTasksList","tasks","map","t","key","id","name","priority","onClick","removeTask","role","aria-label","changeFilter","ToDoBoard","useState","v1","setTasks","filter","setFilter","taskForTodoList","taskID","filteredTasks","value","MessageBubble","s","incoming","src","avatar","alt","date","text","Chat","fuji","koifish","lionstatue","luckycat","CustomInput","type","onChange","onChangeText","onKeyPress","onPressEnter","errorMessage","placeHolder","spanClassName","inputStyle","errorSpanStyle","e","currentTarget","placeholder","Hello","setName","visitors","setVisitors","setErrorMessage","onGreetingsButtonClick","alert","addName","newVisitor","length","CustomElementsDemo","clicked","console","log","CustomCheckbox","onChangeChecked","customSpanClassName","children","setValue","checkboxStyle","spanStyle","checked","HW4","setText","showAlert","checkedValue","setCheckedValue","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","EditableSpan","autoFocus","onBlur","onEnter","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","HW6","undefined","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","MenuAside","htmlFor","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7750b972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-bubble\":\"MessageBubble_message-bubble__3OKSI\",\"message-bubble--right\":\"MessageBubble_message-bubble--right__1uBiy\",\"message-bubble--left\":\"MessageBubble_message-bubble--left__2Irja\",\"message-bubble__inner\":\"MessageBubble_message-bubble__inner__6caiq\"};","module.exports = __webpack_public_path__ + \"static/media/fuji.0e1c42b1.png\";","module.exports = __webpack_public_path__ + \"static/media/koifish.de4622b8.png\";","module.exports = __webpack_public_path__ + \"static/media/luckycat.0257e4c8.png\";","module.exports = __webpack_public_path__ + \"static/media/lionstatue.6c09dc74.png\";","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype CustomButtonType =  DefaultButtonPropsType & {\r\n  color?: \"teal\" | \"green\" | \"red\" | \"blue\" | \"pink\" | \"purple\" | \"orange\" | \"yellow\"\r\n  size?: \"small\" | \"normal\" | \"big\"\r\n}\r\n\r\nenum Sizes {\r\n  small = 8,\r\n  normal = 10,\r\n  big = 12\r\n}\r\n\r\nexport const CustomButton: FC<CustomButtonType> = (\r\n    {\r\n      color = \"teal\", size = \"normal\",\r\n      className, ...restProps\r\n    }\r\n) => {\r\n\r\n  const buttonStyle = `\r\n         ${className ? className : \"\"} \r\n         bg-${color}-200 hover:bg-${color}-300 active:bg-${color}-400 h-${Sizes[size]} \r\n         px-${size === \"big\" ? \"10\" : \"5\"} text-gray-800 inline-flex appearance-none \r\n         items-center justify-center transition-all duration-200 select-none relative \r\n         whitespace-no-wrap align-middle leading-tight outline-none focus:outline-none \r\n         min-w-10 text-base focus:shadow-outline font-semibold rounded-md mx-2`\r\n\r\n  return (\r\n      <button\r\n          className={buttonStyle}\r\n          {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n      />\r\n  )\r\n}","import React from \"react\";\r\nimport {FilterPriorityValuesType, TaskType} from \"../../ToDoBoard\";\r\nimport {CustomButton} from \"../../../common/CustomButton/CustomButton\";\r\n\r\ntype PropsType = {\r\n  name: string\r\n  tasks: Array<TaskType>\r\n  removeTask: (taskID: string) => void\r\n  changeFilter: (value: FilterPriorityValuesType) => void\r\n}\r\n\r\n\r\nexport function ToDoList(props: PropsType) {\r\n\r\n  const renderTasksList = props.tasks.map(t => {\r\n    const removeTasks = () => {\r\n      props.removeTask(t.id)\r\n    }\r\n\r\n    return (\r\n        <li key={t.id} className=\"py-2 px-3 my-3 border border-gray-600 rounded-md flex justify-between items-center\">\r\n          <span><b>{t.name}</b> [{t.priority}]</span>\r\n          <button onClick={removeTasks}><span role=\"img\" aria-label=\"delete\">❌</span></button>\r\n        </li>\r\n    )\r\n  })\r\n\r\n  const onSetAllFilterClick = () => {\r\n    props.changeFilter(\"all\")\r\n  }\r\n  const onSetHeightFilterClick = () => {\r\n    props.changeFilter(\"height\")\r\n  }\r\n  const onSetMiddleFilterClick = () => {\r\n    props.changeFilter(\"middle\")\r\n  }\r\n  const onSetLowFilterClick = () => {\r\n    props.changeFilter(\"low\")\r\n  }\r\n\r\n  return (\r\n      <section className=\"w-full flex justify-center text-gray-100 mt-10\">\r\n        <div className=\"border bg-gray-700 inline-block p-6 rounded-lg text-left\">\r\n          <h3 className=\"text-2xl pb-4\">{props.name}</h3>\r\n          <ul className=\"list-none\">\r\n            {renderTasksList}\r\n          </ul>\r\n          <div>\r\n            <h4 className=\"text-xl pb-2 pt-4\">Priority filter:</h4>\r\n\r\n            <CustomButton onClick={onSetAllFilterClick} color=\"yellow\">All</CustomButton>\r\n            <CustomButton onClick={onSetHeightFilterClick} color=\"red\">Height</CustomButton>\r\n            <CustomButton onClick={onSetMiddleFilterClick} color=\"blue\">Middle</CustomButton>\r\n            <CustomButton onClick={onSetLowFilterClick} color=\"green\">Low</CustomButton>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  )\r\n}","import React, {useState} from \"react\";\r\nimport {v1} from 'uuid';\r\nimport {ToDoList} from \"./components/ToDoList/ToDoList\";\r\n\r\n\r\nexport type TaskType = {\r\n  id: string\r\n  name: string\r\n  priority: PriorityValuesType\r\n}\r\n\r\nexport type PriorityValuesType = \"height\" | \"middle\" | \"low\"\r\nexport type FilterPriorityValuesType = \"all\" | \"height\" | \"middle\" | \"low\"\r\n\r\n\r\nexport function ToDoBoard () {\r\n\r\n  const [tasks, setTasks] = useState<Array<TaskType>>(\r\n      [\r\n        {id: v1(), name: \"Work\", priority: \"height\"},\r\n        {id: v1(), name: \"Anime\", priority: \"low\"},\r\n        {id: v1(), name: \"Gaming\", priority: \"middle\"},\r\n        {id: v1(), name: \"ReactJS\", priority: \"height\"},\r\n        {id: v1(), name: \"HTML\", priority: \"low\"},\r\n      ])\r\n\r\n  const [filter, setFilter] = useState<FilterPriorityValuesType>(\"all\")\r\n\r\n  function removeTasks(taskID: string) {\r\n    const filteredTasks = tasks.filter(t => t.id !== taskID)\r\n    setTasks(filteredTasks)\r\n  }\r\n\r\n  function changeFilter(value: FilterPriorityValuesType) {\r\n    setFilter(value)\r\n  }\r\n\r\n  let taskForTodoList = tasks\r\n  if (filter === \"low\") {\r\n    taskForTodoList = tasks.filter(t => t.priority === \"low\")\r\n  }\r\n  if (filter === \"middle\") {\r\n    taskForTodoList = tasks.filter(t => t.priority === \"middle\")\r\n  }\r\n  if (filter === \"height\") {\r\n    taskForTodoList = tasks.filter(t => t.priority === \"height\")\r\n  }\r\n  if (filter === \"all\") {\r\n    taskForTodoList = tasks.filter(t => t.priority)\r\n  }\r\n\r\n  return (\r\n      <section className=\"\">\r\n        <ToDoList\r\n            name=\"What to learn\"\r\n            tasks={taskForTodoList}\r\n            removeTask={removeTasks}\r\n            changeFilter={changeFilter}\r\n        />\r\n      </section>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport s from './MessageBubble.module.css'\r\n\r\ntype MessageBubbleType = {\r\n  name: string\r\n  avatar: string\r\n  text: string\r\n  date: string\r\n  incoming: boolean\r\n}\r\n\r\nexport function MessageBubble (props: MessageBubbleType) {\r\n  return (\r\n      <section>\r\n        <div className={`${s['message-bubble']} ${props.incoming ? s['message-bubble--left'] : s['message-bubble--right']}`}>\r\n          <div className={`${s['message-bubble__inner']}`}>\r\n            <img src={props.avatar} alt=\"Avatar\"/>\r\n            <div>\r\n              <h4>{props.name} <span>@ {props.date}</span></h4>\r\n              <p>\r\n                {props.text}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  )\r\n}","import React from \"react\";\r\nimport fuji from '../../assets/img/fuji.png';\r\nimport koifish from '../../assets/img/koifish.png';\r\nimport luckycat from '../../assets/img/luckycat.png';\r\nimport lionstatue from '../../assets/img/lionstatue.png';\r\nimport {MessageBubble} from \"./components/MessageBubble/MessageBubble\";\r\n\r\nexport function Chat () {\r\n  return (\r\n      <section>\r\n        <MessageBubble incoming={true} name=\"Jack\" avatar={fuji} date={\"29.09.2020\"}\r\n                       text=\"(TypeScript) домашка от меня №1: создать проект и прислать архив мне или выложить на github и прислать мне ссылку: - любую домашку вы НЕ обязаны делать самостоятельно, если что-то не получается - пишем мне или на хэлп - учитывая что все домашки будут в 1 проекте - лучше сделать дополнительную компоненту в Аpp и внутри новой компоненты писать там код домашки\"/>\r\n\r\n        <MessageBubble incoming={false} name=\"Bob\" avatar={koifish} date={\"29.09.2020\"}\r\n                       text=\"создать компоненту, которая будет выводить текст,  стилизованно как в телеграмме (имя, текст, время, уголок (загуглить как или украсть с другого сайта/у друга)) - попрактикуйте пропсы!!! их типизацию и module.css\"/>\r\n\r\n        <MessageBubble incoming={true} name=\"John\" avatar={lionstatue} date={\"29.09.2020\"}\r\n                       text=\"нужно типизировать пропсы сразу, any - крайне нежелателен даже вначале, если не знаете как - пишем мне или на хэлп не заливать на гит папку .idea (в этой папке настройки вашего вэбшторма, которые никому не нужны, эту папку заливают эгоисты, которые не хотят работать в команде)\"/>\r\n\r\n        <MessageBubble incoming={false} name=\"Mary\" avatar={luckycat} date={\"29.09.2020\"}\r\n                       text=\"ну и Ctrl + Alt + L не забывайте нажимать чтоб красивый код был (это увеличивает скорость обучения и чтения кода и облегчает поиск ошибок и понимание что тут происходит) кто не знает гит - можете присылать мне архив проекта (!!! без папки node_modules и .idea !!!) пример того что должно получиться\"/>\r\n      </section>\r\n  )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes, KeyboardEvent} from 'react';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype CustomInputType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onPressEnter?: () => void\r\n  errorMessage?: string\r\n  placeHolder?: string\r\n  spanClassName?: string\r\n}\r\n\r\n\r\nexport const CustomInput: FC<CustomInputType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onPressEnter,\r\n        errorMessage,\r\n        placeHolder = \"Type something...\",\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e); // проверка, если есть пропс onChange\r\n                             // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  }\r\n\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === \"Enter\" // если нажата кнопка Enter\r\n    && onPressEnter // и есть пропс onEnter\r\n    && onPressEnter(); // то вызвать его\r\n  }\r\n\r\n    const inputStyle = `${errorMessage ? \"border-red-400 bg-red-100\" : \"border-gray-500 bg-gray-300\"} \r\n                        flex-grow px-3 py-1 mr-2 text-gray-900 bg-gray-300 border border-gray-500 rounded-md focus:outline-none focus:shadow-outline\r\n                        ${className ? className : \"\"}` // кастомные стили, если есть, то переназначат существющие\r\n\r\n    const errorSpanStyle = `text-red-400 pl-3 text-sm ${spanClassName ? spanClassName : \"\"}`\r\n\r\n  return (\r\n      <div className=\"inline-block text-left\">\r\n        <input\r\n          type={\"text\"}\r\n          onChange={onChangeCallback}\r\n          onKeyPress={onKeyPressCallback}\r\n          className={inputStyle}\r\n          placeholder={placeHolder}\r\n\r\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      <br/>\r\n      {errorMessage && <span className={errorSpanStyle}>{errorMessage}</span>}\r\n      </div>\r\n  )\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport {CustomButton} from \"../common/CustomButton/CustomButton\";\r\nimport {CustomInput} from \"../common/CustomInput/CustomInput\";\r\n\r\ntype VisitorType = {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport function Hello () {\r\n\r\n  const [name, setName] = useState<string>(\"\")\r\n  const [visitors, setVisitors] = useState<Array<VisitorType>>([])\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\")\r\n\r\n  const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value)\r\n    setErrorMessage(\"\")\r\n  }\r\n  const onKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      onGreetingsButtonClick()\r\n    }\r\n  }\r\n\r\n  const onGreetingsButtonClick = () => {\r\n    if (name !== \"\") {\r\n      alert(`Hello ${name}`)\r\n      addName(name)\r\n      setName(\"\")\r\n    } else {\r\n      setErrorMessage(\"Enter your name, please!\")\r\n    }\r\n  }\r\n\r\n\r\n  const addName = (name: string) => {\r\n      const newVisitor: VisitorType = { id: v1(), name: name }\r\n      setVisitors([newVisitor, ...visitors])\r\n  }\r\n\r\n  return (\r\n      <section className=\"pt-64\">\r\n\r\n        <div className=\"flex pb-3 py-4 px-4 w-64 mx-auto\">\r\n          <CustomInput\r\n              placeholder=\"Enter your name...\"\r\n\r\n              value={name}\r\n              onChange={onChangeTitle}\r\n              onKeyPress={onKeyPress}\r\n              errorMessage={errorMessage}\r\n          />\r\n\r\n\r\n          <CustomButton onClick={onGreetingsButtonClick} color=\"blue\">Boom!</CustomButton>\r\n        </div>\r\n\r\n        <div className=\"text-center\">\r\n           <span className=\"text-gray-600 font-semibold\">Visitors: {visitors.length}</span>\r\n        </div>\r\n      </section>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {CustomButton} from \"../common/CustomButton/CustomButton\";\r\nimport {CustomInput} from \"../common/CustomInput/CustomInput\";\r\n\r\nexport function CustomElementsDemo() {\r\n\r\n  const clicked = () => {\r\n    alert(\"Clicked!\")\r\n  }\r\n\r\n  return (\r\n      <section className=\"mt-1 text-center pb-10\">\r\n        <h1 className=\"p-10 font-major text-3xl text-gray-700 lowercase\">Custom Elements Demonstration</h1>\r\n\r\n        <div className=\"mb-12\">\r\n          <div className=\"mb-4\">\r\n            <CustomInput/>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <CustomInput onPressEnter={() => {\r\n              console.log(\"Hi there!\")\r\n            }} errorMessage=\"Some error text!\"/>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <CustomInput placeHolder=\"Enter your name...\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <CustomButton onClick={clicked}>Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"red\">Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"blue\">Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"green\">Default</CustomButton>\r\n        </div>\r\n\r\n        <div className=\"mb-10\">\r\n          <CustomButton onClick={clicked} color=\"purple\">Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"orange\">Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"pink\">Default</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"yellow\">Default</CustomButton>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <CustomButton onClick={clicked} size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"red\" size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"blue\" size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"green\" size=\"big\">Big</CustomButton>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <CustomButton onClick={clicked} color=\"purple\" size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"orange\" size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"pink\" size=\"big\">Big</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"yellow\" size=\"big\">Big</CustomButton>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <CustomButton onClick={clicked} size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"red\" size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"blue\" size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"green\" size=\"small\">Small</CustomButton>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <CustomButton onClick={clicked} color=\"purple\" size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"orange\" size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"pink\" size=\"small\">Small</CustomButton>\r\n          <CustomButton onClick={clicked} color=\"yellow\" size=\"small\">Small</CustomButton>\r\n        </div>\r\n      </section>\r\n  )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype CustomCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  customSpanClassName?: string\r\n};\r\n\r\nexport const CustomCheckbox: React.FC<CustomCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, customSpanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n\r\n}\r\n) => {\r\n  const [value, setValue] = useState<boolean>(false)\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.currentTarget.checked)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n  }\r\n\r\n  const checkboxStyle = `${className ? className : \"\"}`\r\n  const spanStyle = `pl-1 ${customSpanClassName ? customSpanClassName : \"\"}`\r\n\r\n  return (\r\n      <label>\r\n        <input\r\n            type=\"checkbox\"\r\n            className={checkboxStyle}\r\n            checked={value}\r\n            onChange={onChangeHandler}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n        />\r\n        {children && <span className={spanStyle}>{children}</span>}\r\n      </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {CustomInput} from \"../common/CustomInput/CustomInput\";\r\nimport {CustomButton} from \"../common/CustomButton/CustomButton\";\r\nimport {CustomCheckbox} from \"../common/CustomCheckbox/CustomCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const errorMessage = text ? \"\" : \"Error Message Text Goes Here\";\r\n    const showAlert = () => {\r\n        if (errorMessage) {\r\n            alert(\"Введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checkedValue, setCheckedValue] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setCheckedValue(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div className=\"py-5 text-center\">\r\n\r\n          <h1 className=\"p-10 text-3xl text-gray-700 lowercase font-major\">homework 4</h1>\r\n\r\n\r\n            <div className=\"flex flex-col items-center\">\r\n                {/*should work (должно работать)*/}\r\n              <div className=\"p-5\">\r\n                <CustomInput\r\n                  value={text}\r\n                  onChangeText={setText}\r\n                  onPressEnter={showAlert}\r\n                  errorMessage={errorMessage}\r\n                  // className={\"bg-green-500 placeholder-white\"} // РАБОТАЕТ // проверьте, работает ли смешивание классов\r\n              />\r\n              </div>\r\n\r\n              <div className=\"p-5\">\r\n                <CustomButton\r\n                    color=\"red\"\r\n                    onClick={showAlert}\r\n                >\r\n                    Delete {/*// название кнопки попадёт в children*/}\r\n                </CustomButton>\r\n              </div>\r\n\r\n              <div className=\"p-5\">\r\n                <CustomCheckbox\r\n                    checked={checkedValue}\r\n                    onChangeChecked={setCheckedValue}\r\n                >\r\n                    Some text {/*// этот текст попадёт в children*/}\r\n                </CustomCheckbox>\r\n\r\n                <br/>\r\n                {/*// onChange тоже должен работать*/}\r\n                <CustomCheckbox\r\n                    checked={checkedValue}\r\n                    onChange={testOnChange}\r\n                />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport {CustomInput} from \"../CustomInput/CustomInput\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для span\r\n};\r\n\r\nconst EditableSpan: React.FC<EditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps // все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `text-xl bg-gray-300 px-3 py-1 rounded-md ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <CustomInput\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onPressEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditableSpan;\r\n","import React, {useState} from \"react\";\r\nimport {CustomButton} from \"../common/CustomButton/CustomButton\";\r\nimport {restoreState, saveState} from \"../localStorage/localStorage\";\r\nimport EditableSpan from \"../common/EditableSpan/EditableSpan\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n      setValue(restoreState<string>(\"editable-span-value\", \"\"))\r\n    };\r\n\r\n    return (\r\n        <div className=\"py-5 text-center\">\r\n\r\n          <h1 className=\"p-10 text-3xl text-gray-700 lowercase font-major\">homework 6</h1>\r\n\r\n\r\n            <div className=\"mb-5\">\r\n                <EditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"You can edit me! 🤖\"}}\r\n                />\r\n            </div>\r\n          <div className=\"text-center\">\r\n            <CustomButton onClick={save}>&nbsp;&nbsp;save&nbsp;&nbsp;</CustomButton>\r\n            <CustomButton onClick={restore}>restore</CustomButton>\r\n          </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport {ToDoBoard} from \"../ToDoBoard/ToDoBoard\";\r\nimport {Chat} from \"../Chat/Chat\";\r\nimport {Hello} from \"../Hello/Hello\";\r\nimport {CustomElementsDemo} from \"../CustomElementsDemo/CustomElementsDemo\";\r\nimport HW4 from \"./HW4\";\r\nimport HW6 from \"./HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div className=\"py-5\">\r\n          <HW6/>\r\n          <HW4/>\r\n          <CustomElementsDemo/>\r\n          <Hello/>\r\n          <ToDoBoard/>\r\n          <Chat/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport {ToDoBoard} from \"./ToDoBoard/ToDoBoard\";\r\nimport {Chat} from \"./Chat/Chat\";\r\nimport {Hello} from \"./Hello/Hello\";\r\nimport {CustomElementsDemo} from \"./CustomElementsDemo/CustomElementsDemo\";\r\nimport HW4 from \"./pages/HW4\";\r\n\r\nexport const PATH = {\r\n  PRE_JUNIOR: \"/pre-junior\",\r\n  JUNIOR: \"/junior\",\r\n  JUNIOR_PLUS: \"/junior-plus\",\r\n  TODOLIST: \"/todo\",\r\n  CHAT: \"/chat\",\r\n  HELLO: \"/hello\",\r\n  CUSTOM_ELEMENTS_DEMO: \"/custom-elements-demo\",\r\n  HW4: \"/HW4\",\r\n  GREETINGS: \"/greetings\"\r\n}\r\n\r\nfunction Routes() {\r\n  return (\r\n      <HashRouter>\r\n        <div>\r\n          {/*Switch выбирает первый подходящий роут*/}\r\n          <Switch>\r\n\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>{/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}{/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n\r\n            <Route path={PATH.TODOLIST} render={() => <ToDoBoard/>}/>\r\n            <Route path={PATH.CHAT} render={() => <Chat/>}/>\r\n            <Route path={PATH.HELLO} render={() => <Hello/>}/>\r\n            <Route path={PATH.CUSTOM_ELEMENTS_DEMO} render={() => <CustomElementsDemo/>}/>\r\n            <Route path={PATH.HW4} render={() => <HW4/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n            <Route render={() => <Error404/>}/> {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n\r\n// - установите в свой проект react-router-dom и используя <HashRouter> вместо <BrowserRouter> (так как он лучше работает на gh-pages) сделайте 3 страницы:\r\n//     1) preJunior 2) Junior 3) Junior+\r\n// (подсмотрите в соцсети \"как\" или смело обращайтесь на \"хэлп\" по любым вопросам)\r\n// - сделайте выезжающий сбоку/сверху/снизу (на выбор/или все сразу для практики) навбар со списком страниц, обёрнутых в <NavLink> со ссылками на соответствующие страницы, текущую страницу в списке подсвечивать\r\n// - разместите на первой странице результат моих домашек № 1-4\r\n// - не забудьте сделать deploy)","import React from \"react\";\r\nimport './MenuAside.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport function MenuAside () {\r\n  return (\r\n\r\n      <>\r\n        <input type=\"checkbox\" id=\"hmt\" className=\"hidden-menu-ticker\"/>\r\n        <label className=\"btn-menu\" htmlFor=\"hmt\">\r\n          <span className=\"first\"/>\r\n          <span className=\"second\"/>\r\n          <span className=\"third\"/>\r\n        </label>\r\n        <ul className=\"hidden-menu flex-col\">\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/chat\" className=\"mt-10 mx-3 p-3 rounded-md bg-green-200 text-green-700 hover:bg-red-200\"><b>Chat</b> (Task 01) </NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/todo\" className=\"mt-10 mx-3 p-3 rounded-md bg-green-200 text-green-700 hover:bg-red-200\"><b>TODO</b> (Task 02) </NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/hello\" className=\"mt-10 mx-3 p-3 rounded-md bg-green-200 text-green-700 hover:bg-red-200\"><b>Hello</b> (Task 03) </NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/custom-elements-demo\" className=\"mt-10 mx-3 p-3 rounded-md bg-green-200 text-green-700 hover:bg-red-200\"><b>Custom Elements Demo</b> (Task 04) </NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/HW4\" className=\"mt-10 mx-3 p-3 rounded-md bg-green-200 text-green-700 hover:bg-red-200\"><b>Код Игната (HW4)</b> (Task 04) </NavLink>\r\n          </li>\r\n\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/pre-junior\" className=\"mt-10 mx-3 p-3 rounded-md bg-blue-200 text-blue-700 hover:bg-red-200\"><b>Pre-Junior</b></NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/junior\" className=\"mt-10 mx-3 p-3 rounded-md bg-blue-200 text-blue-700 hover:bg-red-200\"><b>Junior</b></NavLink>\r\n          </li>\r\n          <li className=\"inline-block mt-10\">\r\n            <NavLink to=\"/junior-plus\" className=\"mt-10 mx-3 p-3 rounded-md bg-blue-200 text-blue-700 hover:bg-red-200\"><b>Junior+</b></NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n      </>\r\n\r\n\r\n\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport Routes from \"./components/Routes\";\r\nimport {MenuAside} from \"./components/MenuAside/MenuAside\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter>\r\n        <div className=\"App h-full\">\r\n          <MenuAside/>\r\n          <Routes/>\r\n        </div>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}